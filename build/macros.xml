<?xml version="1.0" encoding="UTF-8"?>
<project>
    <macrodef name="embed.libs">
        <sequential>
            <taskdef name="jarjar" classname="com.tonicsystems.jarjar.JarJarTask"
                     classpathref="all.dependancies"/>
            <property name="release.no.libs.jar" value="${artifacts}/${release.name}-nolibs.jar"/>
            <jarjar jarfile="${release.no.libs.jar}">
                <zipfileset src="${release.jar.path}"/>
                <zipgroupfileset dir="${build.dependencies.dir}"
                                 includes="totallylazy-*.jar, funclate-*.jar, qdox-*.jar, antlr-*.jar, stringtemplate-*.jar"
                                 excludes="*-sources.jar"/>
                <rule pattern="com.googlecode.totallylazy.*" result="com.googlecode.yatspec.internal.totallylazy.$@1"/>
                <rule pattern="com.googlecode.totallylazy.**.*" result="com.googlecode.yatspec.internal.totallylazy.@1.$@2"/>
                <rule pattern="com.googlecode.funclate.*" result="com.googlecode.yatspec.internal.funclate.$@1"/>
                <rule pattern="com.googlecode.funclate.**.*" result="com.googlecode.yatspec.internal.funclate.@1.$@2"/>
                <rule pattern="com.thoughtworks.qdox.*" result="com.googlecode.yatspec.internal.qdox.$@1"/>
                <rule pattern="com.thoughtworks.qdox.**.*" result="com.googlecode.yatspec.internal.qdox.@1.$@2"/>
                <rule pattern="antlr.*" result="com.googlecode.yatspec.internal.antlr.$@1"/>
                <rule pattern="antlr.**.*" result="com.googlecode.yatspec.internal.antlr.@1.$@2"/>
                <rule pattern="org.antlr.stringtemplate.*" result="com.googlecode.yatspec.internal.stringtemplate.$@1"/>
                <rule pattern="org.antlr.stringtemplate.**.*" result="com.googlecode.yatspec.internal.stringtemplate.@1.$@2"/>
            </jarjar>
            <delete file="${release.jar.path}"/>
            <move file="${release.no.libs.jar}" tofile="${release.jar.path}"/>
        </sequential>
    </macrodef>

	<macrodef name="compile.and.jar">
        <attribute name="src"/>
        <attribute name="jar"/>
        <attribute name="classpathref"/>
        <attribute name="version"/>
        <attribute name="classes" default="@{jar}.classes"/>

        <sequential>
            <mkdir dir="@{classes}"/>
            <javac srcdir="@{src}" destdir="@{classes}" classpathref="@{classpathref}" target="1.8" debug="true" includeantruntime="false"/>

            <copy todir="@{classes}">
                <fileset dir="@{src}">
                    <exclude name="**/*.java"/>
                    <exclude name="**/*.scala"/>
                </fileset>
            </copy>

            <property name="manifest" value="@{jar}.mf"/>
            <manifest file="${manifest}">
                <attribute name="Built-By" value="${user.name}"/>
                <section name="${ant.project.name}">
                    <attribute name="Specification-Title" value="${ant.project.name}"/>
                    <attribute name="Specification-Version" value="@{version}"/>
                    <attribute name="Specification-Vendor" value="${ant.project.name}"/>
                    <attribute name="Implementation-Title" value="${ant.project.name}"/>
                    <attribute name="Implementation-Version" value="@{version}"/>
                    <attribute name="Implementation-Vendor" value="${ant.project.name}"/>
                </section>
            </manifest>

            <jar destfile="@{jar}" basedir="@{classes}" manifest="${manifest}"/>

            <delete file="$manifest"/>
            <delete dir="@{classes}"/>
        </sequential>
    </macrodef>

    <macrodef name="test">
        <attribute name="jar"/>
        <attribute name="reports"/>
        <attribute name="classpathref"/>
        <attribute name="package"/>

        <sequential>
            <mkdir dir="@{reports}"/>
            <property name="unzipped.jar" value="@{reports}.unzipped.jar"/>
            <mkdir dir="${unzipped.jar}"/>
            <unzip dest="${unzipped.jar}" src="@{jar}"/>
            <!-- https://junit.org/junit5/docs/current/user-guide/#running-tests-console-launcher -->
            <java classpathref="@{classpathref}" classname="org.junit.platform.console.ConsoleLauncher" fork="true" failonerror="true">
                <arg value="--select-package=@{package}"/>
                <arg value="--fail-if-no-tests"/>
                <arg line="--reports-dir @{reports}"/>
                <sysproperty key="yatspec.output.dir" value="@{reports}"/>
                <sysproperty key="yatspec.index.enable" value="true"/>
                <!--<jvmarg value="-Xdebug"/>-->
                <!--<jvmarg value="-Xrunjdwp:transport=dt_socket,server=n,address=nurofen:5005,suspend=y"/>-->
            </java>
            <junitreport todir="@{reports}">
                <fileset dir="@{reports}">
                    <include name="TEST-*.xml"/>
                </fileset>
                <report format="frames" todir="@{reports}/html"/>
            </junitreport>
            <delete dir="${unzipped.jar}"/>
        </sequential>
    </macrodef>

</project>
